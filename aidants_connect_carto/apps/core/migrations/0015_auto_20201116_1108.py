# Generated by Django 3.0.5 on 2020-11-16 10:08

import django.contrib.postgres.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0014_auto_20201008_1727"),
    ]

    operations = [
        migrations.AddField(
            model_name="place",
            name="accessibility",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.CharField(
                    blank=True,
                    choices=[
                        ("handicap moteur", "Handicap moteur"),
                        ("handicap visuel", "Handicap visuel"),
                        ("handicap auditif", "Handicap auditif"),
                        ("handicap mental", "Handicap intellectuel ou psychique"),
                    ],
                    max_length=32,
                ),
                blank=True,
                default=list,
                help_text="handicap moteur, handicap visuel, ...",
                size=None,
                verbose_name="Accessible aux formes de handicap suivantes",
            ),
        ),
        migrations.AddField(
            model_name="place",
            name="price",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.CharField(
                    blank=True,
                    choices=[
                        ("gratuit", "Gratuit"),
                        ("adherent", "Adhérent"),
                        ("payant", "Payant"),
                    ],
                    max_length=32,
                ),
                blank=True,
                default=list,
                help_text="gratuit, adherent, ...",
                size=None,
                verbose_name="Coût(s) d'accès",
            ),
        ),
        migrations.AlterField(
            model_name="datasource",
            name="type",
            field=models.CharField(
                choices=[
                    ("hub", "Hub"),
                    ("national", "National"),
                    ("region", "Région"),
                    ("departement", "Département"),
                    ("autre", "Autre / Inconnu"),
                ],
                default="autre",
                max_length=32,
                verbose_name="Le type de source",
            ),
        ),
        migrations.AlterField(
            model_name="place",
            name="labels",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.CharField(
                    blank=True,
                    choices=[
                        ("APTIC", "APTIC"),
                        ("Aidants Connect", "Aidants Connect"),
                        ("France Services", "France Services"),
                        ("Fabriques de Territoire", "Fabriques de Territoire"),
                        ("Grande École du Numérique", "Grande École du Numérique"),
                    ],
                    max_length=150,
                ),
                blank=True,
                default=list,
                help_text="Aidants Connect, France Services, APTIC, ...",
                size=None,
                verbose_name="Label(s)",
            ),
        ),
        migrations.AlterField(
            model_name="place",
            name="legal_entity_type",
            field=models.CharField(
                choices=[
                    ("association", "Association"),
                    ("collectivite", "Collectivité locale ou territoriale"),
                    ("cae", "Coopérative d'Activités et d'Entrepreneur·es (CAE)"),
                    (
                        "epci",
                        "Établissement public de coopération intercommunale (EPCI)",
                    ),
                    (
                        "epic",
                        "Établissement public à caractère industriel et commercial (EPIC)",
                    ),
                    (
                        "epscp",
                        "Établissement public à caractère scientifique, culturel et professionnel (EPSCP)",
                    ),
                    ("gip", "Groupement d'intérêt public (GIP)"),
                    ("sas", "Société par actions simplifiée (SAS)"),
                    ("sarl", "Société à responsabilité limitée (SARL)"),
                    ("sasu", "Société par actions simplifiée unipersonnelle (SASU)"),
                    ("scic", "Société coopérative d’intérêt collectif (SCIC)"),
                    ("scop", "Société coopérative et participative (SCOP)"),
                    ("spl", "Société publique locale (SPL)"),
                    ("autre", "Autre / Inconnu"),
                ],
                default="autre",
                max_length=32,
                verbose_name="La nature juridique du lieu",
            ),
        ),
        migrations.AlterField(
            model_name="place",
            name="status",
            field=models.CharField(
                choices=[
                    ("public", "Public"),
                    ("prive", "Privé"),
                    ("public-prive", "Public-privé"),
                    ("autre", "Autre / Inconnu"),
                ],
                default="autre",
                help_text="Public",
                max_length=32,
                verbose_name="Le statut du lieu",
            ),
        ),
        migrations.AlterField(
            model_name="place",
            name="support_access",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.CharField(
                    blank=True,
                    choices=[
                        ("libre", "Accès libre"),
                        ("inscription", "Sur inscription ou rendez-vous"),
                        ("public cible", "Public cible"),
                        ("adherent", "Adhérents"),
                    ],
                    max_length=32,
                ),
                blank=True,
                default=list,
                help_text="libre, inscription, adherent, ...",
                size=None,
                verbose_name="Modalité(s) d'accès",
            ),
        ),
        migrations.AlterField(
            model_name="place",
            name="support_mode",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.CharField(
                    blank=True,
                    choices=[("individuel", "Individuel"), ("collectif", "Collectif")],
                    max_length=32,
                ),
                blank=True,
                default=list,
                help_text="individuel, collectif, ...",
                size=None,
                verbose_name="Modalité(s) d'accompagnement",
            ),
        ),
        migrations.AlterField(
            model_name="place",
            name="type",
            field=models.CharField(
                choices=[
                    ("administration", "Administration / Collectivité territoriale"),
                    ("association", "Association"),
                    ("bibliotheque", "Bibliothèque / Médiathèque"),
                    ("commune", "Commune (Ville, CCAS, Centre Culturel...)"),
                    ("centre social", "Centre social"),
                    ("departement", "Département (UTPAS, MDS, MDSI, UTAS...)"),
                    ("epn", "Espace Public Numérique (EPN)"),
                    ("formation", "Organisme de formations"),
                    ("intercommunalite", "Intercommunalité (EPCI)"),
                    ("la poste", "La Poste"),
                    ("maison quartier", "Maison de quartier"),
                    ("msap", "Maison de Service au Public (MSAP)"),
                    ("pole emploi", "Pôle Emploi"),
                    ("pimms", "Point Information Médiation Multi Services (PIMMS)"),
                    ("prefecture", "Préfecture, Sous-Préfecture"),
                    (
                        "securite sociale",
                        "Organisme de sécurité sociale (CAF, CPAM, CARSAT, MSA...)",
                    ),
                    ("tiers lieu", "Tiers-lieu / Coworking / FabLab / Hackerspace"),
                    ("autre", "Autre / Inconnu"),
                ],
                default="autre",
                help_text="Administration",
                max_length=32,
                verbose_name="La typologie du lieu",
            ),
        ),
        migrations.AlterField(
            model_name="service",
            name="support_access",
            field=models.CharField(
                blank=True,
                choices=[
                    ("libre", "Accès libre"),
                    ("inscription", "Sur inscription ou rendez-vous"),
                    ("public cible", "Public cible"),
                    ("adherent", "Adhérents"),
                ],
                help_text="libre, inscription, adherent, ...",
                max_length=32,
                verbose_name="Modalités d'accès (si différent du lieu)",
            ),
        ),
        migrations.AlterField(
            model_name="service",
            name="support_mode",
            field=models.CharField(
                blank=True,
                choices=[("individuel", "Individuel"), ("collectif", "Collectif")],
                help_text="individuel, collectif, ...",
                max_length=32,
                verbose_name="Modalités d'accompagnement (si différent du lieu)",
            ),
        ),
        migrations.AlterField(
            model_name="place",
            name="address_raw",
            field=models.CharField(
                blank=True,
                help_text="20 Avenue de Ségur 75007 Paris",
                max_length=300,
                verbose_name="L'adresse complète",
            ),
        ),
        migrations.AlterField(
            model_name="place",
            name="contact_phone_raw",
            field=models.CharField(
                blank=True,
                help_text="0123456789 (sauf le dimanche)",
                max_length=300,
                verbose_name="Le numéro de téléphone brut",
            ),
        ),
    ]
