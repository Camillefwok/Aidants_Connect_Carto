# Generated by Django 3.0.5 on 2020-04-14 16:40

import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [("aidants_connect_carto_api", "0001_initial_create_place_model")]

    operations = [
        migrations.CreateModel(
            name="Service",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=300, verbose_name="Le nom du service"),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, verbose_name="Une description du service"
                    ),
                ),
                (
                    "siret",
                    models.CharField(
                        blank=True,
                        max_length=14,
                        verbose_name="Coordonnées juridiques (SIRET)",
                    ),
                ),
                (
                    "public_target",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(
                            blank=True,
                            choices=[
                                ("tout public", "Tout public"),
                                ("-25 ans", "-25 ans"),
                                ("senior", "Sénior"),
                                ("demandeur emploi", "Demandeur d'emploi"),
                                ("famille", "Famille"),
                            ],
                            max_length=32,
                        ),
                        blank=True,
                        default=list,
                        size=None,
                        verbose_name="Public cible",
                    ),
                ),
                (
                    "support_access",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("libre", "Accès libre"),
                            ("inscription", "Sur inscription"),
                            ("public cible", "Public cible uniquement"),
                            ("adherents", "Adhérents uniquement"),
                        ],
                        max_length=32,
                        verbose_name="Modalités d'accès",
                    ),
                ),
                (
                    "support_mode",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("individuel", "Individuel, Personnalisé"),
                            ("collectif", "Collectif"),
                        ],
                        max_length=32,
                        verbose_name="Modalités d'accompagnement",
                    ),
                ),
                (
                    "schedule_hours_raw",
                    models.TextField(
                        blank=True,
                        help_text="Le mardi de 14h à 18h",
                        verbose_name="Les horaires du service (s'ils sont différents des horaires du lieu)",
                    ),
                ),
                (
                    "schedule_hours_osm_format",
                    models.CharField(
                        blank=True,
                        help_text="Tu 14:00-18:00",
                        max_length=150,
                        verbose_name="Les horaires du service au format OpenStreetMap",
                    ),
                ),
                (
                    "is_free",
                    models.BooleanField(
                        default=True, verbose_name="Le service est-il gratuit ?"
                    ),
                ),
                (
                    "price_detail",
                    models.TextField(blank=True, verbose_name="Le details des prix"),
                ),
                (
                    "payment_methods",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        verbose_name="Les moyens de paiements spécifiques à ce service",
                    ),
                ),
                (
                    "has_label_aidants_connect",
                    models.BooleanField(
                        default=False, verbose_name="Labelisé Aidants Connect"
                    ),
                ),
                (
                    "has_label_mfs",
                    models.BooleanField(
                        default=False, verbose_name="Labelisé France Service"
                    ),
                ),
                (
                    "label_other",
                    models.CharField(
                        blank=True, max_length=300, verbose_name="Autres labels"
                    ),
                ),
                (
                    "additional_information",
                    django.contrib.postgres.fields.jsonb.JSONField(
                        blank=True,
                        null=True,
                        verbose_name="Informations additionnelles stockées au format JSON",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="La date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="La date de dernière modification"
                    ),
                ),
                (
                    "place",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="services",
                        to="aidants_connect_carto_api.Place",
                    ),
                ),
            ],
            options={"ordering": ["id"],},
        ),
    ]
